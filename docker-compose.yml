version: '3'

services:
  app:
    image: laravel-www
    container_name: laravel-www
    restart: unless-stopped
    build:
      args:
          user: sammy
          uid: 1000
      context: .
      dockerfile: docker/Dockerfile
    working_dir: /var/www/html
    depends_on:
      - mariadb
      # - redis
    ports:
      - 8080:80
    volumes:
      - .:/var/www/html
    env_file:
      - .docker.env
    environment:
      CONTAINER_ROLE: app
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # scheduler:
  #   image: laravel-www
  #   container_name: laravel-scheduler
  #   depends_on:
  #     - app
  #     - mariadb
  #     - redis
  #   env_file:
  #   - .docker.env
  #   volumes:
  #     - .:/var/www/html
  #   environment:
  #     CONTAINER_ROLE: scheduler

  # queue:
  #   image: laravel-www
  #   container_name: laravel-queue
  #   depends_on:
  #     - app
  #     - mariadb
  #     - redis
  #   env_file:
  #   - .docker.env
  #   volumes:
  #     - .:/var/www/html
  #   environment:
  #     CONTAINER_ROLE: queue

  mariadb:
    container_name: laravel-mariadb
    image: mariadb:10.7
    volumes:
      - mariadb:/var/lib/mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - '${DB_PORT:-3306}:3306'

  # redis:
  #   container_name: laravel-redis
  #   image: redis:4-alpine
  #   restart: unless-stopped
  #   ports:
  #     - '${REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - redis:/data

  phpmyadmin:
    container_name: laravel-phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    ports:
      - '8081:80'
    environment:
      PMA_HOST: mariadb
    depends_on:
      - mariadb

  mailhog:
    image: mailhog/mailhog
    container_name: laravel-mailhog
    ports:
      - '${MAIL_PORT:-1025}:1025'
      - '8025:8025'

  npm:
    image: node:16.19-slim
    container_name: laravel-npm
    user: node
    working_dir: /srv
    entrypoint: ["npm"]
    volumes:
        - .:/srv

volumes:
  mariadb:
    driver: 'local'
  redis:
    driver: 'local'
